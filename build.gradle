buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.jenkins-ci.org/releases/' }
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.35.0',
                'com.netflix.nebula:gradle-extra-configurations-plugin:5.0.3'
    }
}

plugins { id "no.nils.wsdl2java" version "0.8" }

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.jenkins-ci.jpi'
apply plugin: 'nebula.provided-base'

repositories {
    jcenter()
    mavenLocal()        // Use this to load a custom build of Common Client from a local Maven repo.
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    maven { url 'http://cx-artifactory:8081/artifactory/libs-release/' }
    maven { url 'http://cx-artifactory:8081/artifactory/libs-snapshot' }
    maven { url 'http://cx-artifactory:8081/artifactory/plugins-release-local/' }
    maven { url 'http://cx-artifactory:8081/artifactory/libs-snapshot-local' }
}

test {
    maxParallelForks = Runtime.getRuntime().availableProcessors()
    useJUnitPlatform()
}

//currently there is an issue with Java8 and javadocs,
// Java 8 seems to be really strict with the JavaDoc. This is due to the new doclint for Javadoc
//for now we disable it so we can build the project properly
allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

dependencies {
    compileOnly 'com.intellij:annotations:12.0',
            'org.slf4j:slf4j-api:1.7.31',
            'org.slf4j:slf4j-log4j12:1.7.31',
            'log4j:log4j:1.2.17'

    compile ('com.checkmarx:cx-config-provider:1.0.14') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
    }

    compile ('com.checkmarx:cx-client-common:4.4.4') {
       exclude group: 'org.apache.commons', module: 'commons-compress'
       exclude group: 'org.yaml' , module: 'snakeyaml'
       exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'org.json', module: 'json'
    }
    
    compile 'com.fasterxml.jackson.core:jackson-core:2.11.3',
            'com.fasterxml.jackson.core:jackson-annotations:2.11.3',
            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.3',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.5',
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.5',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1',
            'org.apache.logging.log4j:log4j-api:2.17.1',
            'org.apache.logging.log4j:log4j-core:2.17.1',
            'org.apache.commons:commons-compress:1.22',
            'com.google.code.gson:gson:2.8.9',           
            'org.yaml:snakeyaml:1.33',
            'org.json:json:20230227'

            constraints {
                implementation('io.vertx:vertx-web:3.9.7') {
                    because 'previous versions have a bug impacting this application'
                }
                implementation('commons-beanutils:commons-beanutils:1.9.4') {
                    because 'previous versions have a bug impacting this application'
                }
                implementation('io.netty:netty-codec-http:4.1.60.Final') {
                    because 'previous versions have a bug impacting this application'
                }
                implementation('org.apache.httpcomponents:httpclient:4.5.13') {
                    because 'previous versions have a bug impacting this application'
                }
                implementation('commons-io:commons-io:2.7') {
                    because 'previous versions have a bug impacting this application'
                }
            }

    optionalJenkinsPlugins 'org.jenkins-ci.main:maven-plugin:1.509.4@jar',
            'org.jenkins-ci.plugins:credentials:2.1.19@jar'

    testCompile 'junit:junit:4.13.1',
            'org.eclipse.sisu:org.eclipse.sisu.plexus:0.0.0.M5',
            'org.jmockit:jmockit:1.16'


    // Fails with Gradle 2.12 and up without it. Related to https://issues.jenkins-ci.org/browse/JENKINS-17129
    jenkinsTest 'org.jenkins-ci.plugins:ant:1.2@jar',
            'org.jenkins-ci.plugins:mailer:1.32.1@jar',
            'org.jenkins-ci.plugins:matrix-project:1.18@jar'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2',
            'org.mockito:mockito-junit-jupiter:2.23.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2',
            'org.mockito:mockito-junit-jupiter:2.23.0')
}
jenkinsPlugin {
    // version of Jenkins core this plugin depends on
    coreVersion = '2.77'

    // short name of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'checkmarx'

    // human-readable name of plugin
    displayName = 'Jenkins Checkmarx Plugin'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'https://wiki.jenkins-ci.org/display/JENKINS/Checkmarx+CxSAST+Plugin'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/jenkinsci/checkmarx-plugin.git'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = true

    // URL used to deploy the plugin, defaults to the value shown
    // repoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/releases'

    // URL used to deploy snapshots of the plugin, defaults to the value shown
    // snapshotRepoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/snapshots'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = false

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    developers {
        developer {
            id 'iland'
            name 'Ilan Dayan'
        }
    }
}

