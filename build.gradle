buildscript {
	repositories {
		jcenter()
		maven { url 'http://repo.jenkins-ci.org/releases/' }
	}
	dependencies {
		classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.18.1',
				'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
	}
}

plugins { id "no.nils.wsdl2java" version "0.8" }

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.jenkins-ci.jpi'
apply plugin: 'provided-base'

repositories {
	jcenter()
	maven { url 'http://repo.jenkins-ci.org/releases/' }
}

sourceCompatibility = 7
targetCompatibility = 7


test {
	maxParallelForks = Runtime.getRuntime().availableProcessors()
}

dependencies {
	provided 'com.intellij:annotations:12.0'

	compile 'com.checkmarx.components:zipper:1.2.2',
			'org.apache.ant:ant:1.9.2',
			'log4j:log4j:1.2.17',
			'org.apache.commons:commons-lang3:3.1',
			'commons-io:commons-io:2.4',
			'com.googlecode.lambdaj:lambdaj:2.3.3',
			'org.glassfish.jersey.core:jersey-client:2.22.1',
			'org.glassfish.jersey.media:jersey-media-json-jackson:2.22.1',
			'org.glassfish.jersey.media:jersey-media-multipart:2.22.1'

	optionalJenkinsPlugins 'org.jenkins-ci.main:maven-plugin:1.509.3@jar'


	testCompile 'junit:junit:4.12',
			'org.jmockit:jmockit:1.16'

	// Fails with Gradle 2.12 and up without it. Related to https://issues.jenkins-ci.org/browse/JENKINS-17129
	jenkinsTest 'org.jenkins-ci.plugins:ant:1.2@jar',
			'org.jenkins-ci.plugins:mailer:1.1@jar',
			'org.jenkins-ci.plugins:matrix-project:1.4@jar'

}

wsdl2java {
	generatedWsdlDir = file("build/generated-sources")  // target directory for generated source code
	wsdlDir = file("src/main/config/com/checkmarx/jenkins/CxWebService") // define to support incremental build
	wsdlsToGenerate = [
		['-mark-generated', '-p', 'com.checkmarx.ws.CxWSResolver', '-client', "${wsdlDir}" + '/cxwsresolver.wsdl'],
		['-mark-generated', '-p', 'com.checkmarx.ws.CxJenkinsWebService', '-client', "${wsdlDir}" + '/CxJenkinsWebService.wsdl']
	]
	cxfVersion = "3.1.4"
}


def configurePom(def pom) {
	// pom file details
	pom.project {
	   licenses {
              license {
                 name 'MIT'
                 url 'http://opensource.org/licenses/MIT'
                 distribution 'repo'
              }
	   }
        }
}


jenkinsPlugin {
	// version of Jenkins core this plugin depends on
	coreVersion = '1.579'

	// short name of the plugin, defaults to the project name without trailing '-plugin'
	shortName = 'checkmarx'

	// human-readable name of plugin
	displayName = 'Jenkins Checkmarx Plugin'

	// URL for plugin on Jenkins wiki or elsewhere
	url = 'https://wiki.jenkins-ci.org/display/JENKINS/Checkmarx+CxSAST+Plugin'

	// plugin URL on GitHub, optional
	gitHubUrl = 'https://github.com/jenkinsci/checkmarx-plugin.git'

	// use the plugin class loader before the core class loader, defaults to false
	pluginFirstClassLoader = true

	// URL used to deploy the plugin, defaults to the value shown
	// repoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/releases'

	// URL used to deploy snapshots of the plugin, defaults to the value shown
	// snapshotRepoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/snapshots'

	// enable injection of additional tests for checking the syntax of Jelly and other things
	disabledTestInjection = false

	// the output directory for the localizer task relative to the project root, defaults to the value shown
	localizerOutputDir = "${project.buildDir}/generated-src/localizer"

	developers {	
		developer {
			id 'checkmarxsupport'
			name 'Checkmarx Support'
		}
		developer {
			id 'sergeyk'
			name 'Sergey Kadaner'
		}
	}
}
