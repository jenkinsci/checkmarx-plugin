buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.jenkins-ci.org/releases/' }
    }
    dependencies {
		classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.38.0',
                'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
    }
}

plugins { id "no.nils.wsdl2java" version "0.8" }

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.jenkins-ci.jpi'
apply plugin: 'provided-base'

repositories {
    jcenter()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    maven { url 'http://cx-artifactory:8081/artifactory/libs-release/' }
    maven { url 'http://cx-artifactory:8081/artifactory/libs-snapshot' }
//	mavenLocal()
}

test {
    maxParallelForks = Runtime.getRuntime().availableProcessors()
}

//currently there is an issue with Java8 and javadocs,
// Java 8 seems to be really strict with the JavaDoc. This is due to the new doclint for Javadoc
//for now we disable it so we can build the project properly
allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

dependencies {
    provided 'com.intellij:annotations:12.0',
            'org.slf4j:slf4j-api:1.6.1'
    compile 'com.checkmarx:cx-client-common:8.90.5'


    optionalJenkinsPlugins 'org.jenkins-ci.main:maven-plugin:1.509.3@jar',
            'org.jenkins-ci.plugins:credentials:1.23@jar'


    testCompile 'junit:junit:4.12',
            'org.eclipse.sisu:org.eclipse.sisu.plexus:0.0.0.M5',
            'org.jmockit:jmockit:1.16'


    // Fails with Gradle 2.12 and up without it. Related to https://issues.jenkins-ci.org/browse/JENKINS-17129
    jenkinsTest 'org.jenkins-ci.plugins:ant:1.2@jar',
            'org.jenkins-ci.plugins:mailer:1.1@jar',
            'org.jenkins-ci.plugins:matrix-project:1.4@jar'

}


jenkinsPlugin {
    // version of Jenkins core this plugin depends on
    coreVersion = '1.579'

    // short name of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'checkmarx'

    // human-readable name of plugin
    displayName = 'Jenkins Checkmarx Plugin'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'https://wiki.jenkins-ci.org/display/JENKINS/Checkmarx+CxSAST+Plugin'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/jenkinsci/checkmarx-plugin.git'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = true

    // URL used to deploy the plugin, defaults to the value shown
    // repoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/releases'

    // URL used to deploy snapshots of the plugin, defaults to the value shown
    // snapshotRepoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/snapshots'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = false

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    developers {
        developer {
            id 'checkmarxsupport'
            name 'Checkmarx Support'
        }
        developer {
            id 'galdor'
            name 'Gal Dor'
        }
    }
}